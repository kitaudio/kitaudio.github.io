{"version":3,"sources":["webpack:///webpack/bootstrap 3b7d460da08720a2db1d","webpack:///./src/util/constraint.js","webpack:///./src/util/constraint-def.js","webpack:///./src/ui/core/widget.js","webpack:///./src/audio_modules/core/audio-module.js","webpack:///./src/ui/dial.js","webpack:///./src/util/util-math.js","webpack:///./src/audio_modules/core/util.js","webpack:///./src/ui/core/widget-mixin-svgns.js","webpack:///./src/ui/core/widget-mixin-state.js","webpack:///./src/ui/core/widget-mixin-options.js","webpack:///./src/ui/core/widget-mixin-observer.js","webpack:///./src/ui/slider.js","webpack:///./src/audio_modules/core/shim-web-audio-connect.js","webpack:///./src/audio_modules/core/verify-audio-context-features.js","webpack:///./test/manual_test/audio_modules/manual-test.js","webpack:///./src/audio_modules/stereo-panner-shim.js","webpack:///./src/audio_modules/channel-strip.js"],"names":["Constraint","spec","min","max","enum","transform","ConstraintSpec","specDefObj","constraintMap","_parseMap","targetObj","_this","forEach","_constrainBranch","keyBranch","target","constraint","key","undefined","Math","Array","find","c","cMap","push","Object","parentBranch","map","x","keys","keyIdx","newKeyBranch","curKey","length","arrFlag","i","keyBranchSlice","slice","j","_applyConstraint","Widget","container","o","Element","Error","svg","document","createElementNS","SVG_NS","appendChild","setAttribute","getBoundingClientRect","width","height","svgEls","handlers","state","stateConstraints","observers","_initOptions","_initStateConstraints","_initState","_initSvgEls","_initHandlers","values","appendSvgEls","svgEl","child","arrEl","newVal","newState","_getLeft","y","_getTop","top","left","assign","prototype","AudioModule","audioCtx","numInputs","numOutputs","isAudioModule","webAudioConnect","input","createGain","output","audioComponents","_initAudioComponents","_initAudioParams","destination","outputIndex","inputIndex","connect","_input","disconnect","_audioModuleInput","Dial","val","setInternalState","setState","stepPrecision","getPrecision","stepInterval","minVal","maxVal","needleColor","activeColor","mouseSensitivity","quantize","num","bgArc","activeArc","needle","_calcSvgArcPath","_calcNeedleCenter","_calcDialRadius","PI","_calcArcStrokeWidth","_calcNeedleEnd","_calcNeedleWidth","_appendSvgEls","_update","y0","yD","getState","touch","ev","clientY","addEventListener","move","release","preventDefault","_calcMovePrecision","removeEventListener","_calcNeedleAngle","radius","_getWidth","_getHeight","trunc","sin","cos","cx","cy","r","startAngle","endAngle","x1","y1","x2","y2","largeArc","sweep","join","precision","MathUtil","decStr","split","round","factor","pow","q","qVal","abs","AudioModuleUtil","midiToFreq","midiPitch","a4tuning","freq","noteNameToMidi","noteName","noteNameFormat","test","console","log","capture","exec","note","accidental","octave","noteFundamentalMap","noteFundamental","noteNameToFreq","WidgetStateMixin","isChanged","hasOwnProperty","constrain","_notifyObservers","WidgetOptionsMixin","getOptions","setOptions","WidgetObserverMixin","addObserver","newObserver","observer","removeObserver","targetObserver","idx","splice","getVal","Slider","sliderBodyColor","sliderHandleColor","toFixed","dims","offsetBottom","offsetTop","bodyWidth","handleWidth","handleHeight","body","overlay","handle","touchBody","stopPropagation","_calcTouchVal","touchHandle","moveHandle","releaseHandle","sliderBodyPos","_calcSliderBodyPos","_calcSliderBodyHeight","sliderHandlePoints","_calcSliderHandlePoints","sliderBodyHeight","x0","valRange","bodyY","_getRelativeY","touchVal","shimWebAudioConnect","audioNodePrototype","getPrototypeOf","webAudioDisconnect","VerifyAudioContextFeatures","features","feature","createAnalyser","createBuffer","createBufferSource","createBiquadFilter","createChannelMerger","createChannelSplitter","createConvolver","createDelay","createDynamicsCompressor","createIIRFilter","createOscillator","createPannerr","createStereoPanner","StereoPannerShim","warn","AUDIO_CTX","AudioContext","DEST","stereoPanner","oscillator","gain","value","frequency","start","panDial","getElementById","pan","checked","channelStrip","generatePanSetter","Number","defineProperty","set","gainL","gainR","merger","err","error","ChannelStrip","inputGain","panner","outputGain"],"mappings":"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","file":"/test/manual_test/audio_modules/manual-test-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 45);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3b7d460da08720a2db1d","/**\n * @class\n * Constraint object represents constraints on a value.\n * Instances of Constraint are used as leaves on a ConstraintSpec definition.\n * A ConstraintSpec useses Constraints to apply a constraint to leaves of an\n * arbitrarily nested object, whose leaves represent values that may be constrained.\n */\nclass Constraint {\n\n  /**\n   * @constructor\n   * @param {object} [spec] - Spec specifying the constraints.\n   * @param {number} [spec.min] - Minimum value.\n   * @param {number} [spec.max] - Maximum value.\n   * @param {array} [spec.enum] - Array of possible enumerable values.\n   * @param {function} [spec.transform] - A transformation function to apply to the value.\n   */\n  constructor(spec) {\n    spec = spec || {};\n\n    this.min = spec.min;\n    this.max = spec.max;\n    this.enum = spec.enum;\n    this.transform = spec.transform;\n  }\n}\n\nexport default Constraint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint.js","import Constraint from \"./constraint\";\n\n/**\n * ConstraintSpec is used to apply a constraining function to a state object of arbitrary nestedness,\n * whose leaves are values that need to be constrained (i.e. to min or max values).\n * In order for ConstraintSpec to work properly, it's constructor must be given an object that\n * exactly mirrors the nested structure of the object to be constrained, with the leaves\n * containing instances of the Constraint class. Additional requirements (i.e. how to deal with nested arrays)\n * are outlined below.\n * TODO: expand explanation\n *\n * @class\n */\nclass ConstraintSpec {\n\n  /**\n   * @constructor\n   * @param {object} specDefObj - The constraint spec definition object, which defines the nesting\n   *                              structure of the objects that need to be constrained. The leaves\n   *                              of this specDef object must be objects of type Constraint, which\n   *                              act as the constraint definitions for each leaf.\n   */\n  constructor(specDefObj) {\n    this.constraintMap = [[]];\n    this._parseMap(specDefObj, this.constraintMap[0], this.constraintMap);\n  }\n\n  /**\n   * Check a constraint map for constraint specs and apply them to obj.\n   * Note: will not mutate the original object. New value is returned.\n   * @public\n   * @param {object} targetObj - The state object to check\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  constrain(targetObj) {\n    const _this = this;\n    _this.constraintMap.forEach(keyBranch => {\n      _this._constrainBranch(targetObj, keyBranch);\n    });\n  }\n\n  /**\n   * Apply a constraint.\n   * @private\n   * @param {object} target - The target object to constrain\n   * @param {Constraint} constraint - The constraint object to use.\n   * @param {symbol} key - The key to use to access the constraint.\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  _applyConstraint(target, constraint, key) {\n    if (constraint.min !== undefined) {\n      target[key] = Math.max(target[key], constraint.min);\n    }\n    if (constraint.max !== undefined) {\n      target[key] = Math.min(target[key], constraint.max);\n    }\n    if (constraint.enum !== undefined && constraint.enum instanceof Array) {\n      target[key] = (constraint.enum.find(target[key]) !== undefined) ? target[key] : constraint.enum[0];\n    }\n    if (constraint.transform !== undefined && typeof constraint.transform === \"function\") {\n      target[key] = constraint.transform(target[key]);\n    }\n\n    return target;\n  }\n\n  /**\n   * Parse a constraint map\n   * @private\n   * @param {object} c - The map object currently being examined.\n   *                     At the top level, this would be the whole map.\n   *                     At the terminal level, this would be an instance of Constraint object.\n   * @param {array} keyBranch - An array of keys that will specify how to get to each Constraint.\n   *                            The last element in this array will be the constraint itself.\n   * @param {array} cMap - An mutable array of key branches.\n   */\n  _parseMap(c, keyBranch, cMap) {\n    const _this = this;\n\n    if (c instanceof Array) {\n      /* if c is an array, add \"_arr_\" to the current map, and examine the first element.\n       * all elements in an array are required to have identical structure, so examining\n       * the first one is enough.\n       */\n      keyBranch.push(\"_arr_\");\n      _this._parseMap(c[0], keyBranch, cMap);\n    } else if (c instanceof Object && !(c instanceof Constraint)) {\n      // keep a copy of the parent branch to create new branches from\n      let parentBranch = keyBranch.map(x=>x);\n\n      // create new branch for each key after the first key using the parentBranch clone\n      Object.keys(c).forEach((key, keyIdx) => {\n        if (keyIdx === 0) {\n          keyBranch.push(key);\n          _this._parseMap(c[key], keyBranch, cMap);\n        } else {\n          let newKeyBranch = parentBranch.map(x=>x);\n          cMap.push(newKeyBranch);\n          newKeyBranch.push(key);\n          _this._parseMap(c[key], newKeyBranch, cMap);\n        }\n      });\n    } else if (c instanceof Constraint) {\n\n      // this will be the last element in the branch - the Constraint object itself\n      keyBranch.push(c);\n    }\n  }\n\n  /**\n   * Apply constraints to one branch of the constraint map.\n   * @private\n   * @param {object} targetObj - The state object to apply the constraint to\n   * @param {object} defObj - The constraint definition object to use.\n   * @param {array} keyBranch - An array of keys representing a path to a constraint object.\n   */\n  _constrainBranch(targetObj, keyBranch) {\n    const _this = this;\n\n    let curKey;\n    let constraint = keyBranch[keyBranch.length - 1];\n    let arrFlag = false;\n\n    /* Drill into targetObj and defObj following keyBranch keys\n     * We go to length - 2, because the next-to-last element might be an\n     * array, and the last element is the Constraint object itself.\n     */\n    for (let i = 0; i < keyBranch.length - 2 && !arrFlag; ++i) {\n      curKey = keyBranch[i];\n\n      // if we encounter an array, drill into each corresponding arry element in targetObj\n      if (curKey === \"_arr_\") {\n        arrFlag = true;\n\n        let keyBranchSlice = keyBranch.slice(i + 1, keyBranch.length);\n\n        for (let j = 0; j < targetObj.length; ++j) {\n          _this._constrainBranch(targetObj[j], keyBranchSlice);\n        }\n      } else {\n        targetObj = targetObj[curKey];\n      }\n    }\n\n    // if arrFlag is set, we've encountered an array somewhere other than on the leaves\n    // in this case we don't need to operate on it\n    if (!arrFlag) {\n      // Apply the constraints\n      curKey = keyBranch[keyBranch.length - 2];\n\n      if (curKey === \"_arr_\") {\n        for (let i = 0; i < targetObj.length; ++i) {\n          _this._applyConstraint(targetObj, constraint, i);\n        }\n      } else {\n        _this._applyConstraint(targetObj, constraint, curKey);\n      }\n    }\n  }\n}\n\nexport default ConstraintSpec;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint-def.js","import WidgetSvgNsMixin from \"./widget-mixin-svgns\";\nimport WidgetStateMixin from \"./widget-mixin-state\";\nimport WidgetOptionsMixin from \"./widget-mixin-options\";\nimport WidgetObserverMixin from \"./widget-mixin-observer\";\n\n'use strict';\n\n/**\n * Abstract base class representing an SVG widget that can be placed inside a DOM container.\n * @class\n * @abstract\n */\nclass Widget {\n\n  /**\n   * @constructor\n   * @mixes WidgetSvgNsMixin\n   * @mixes WidgetStateMixin\n   * @mixes WidgetOptionsMixin\n   * @mixes WidgetObserverMixin\n   * @param {DOM element} container - DOM element that will contain the widget.\n   * @param {object=} o - Options.\n   */\n  constructor(container, o) {\n    if (container === undefined || !(container instanceof Element)) {\n      throw new Error(\"widget requires a DOM element specifying its container as the first argument\");\n    }\n\n    this.container = container;\n\n    o = o || {};\n\n    this.svg = document.createElementNS(this.SVG_NS, \"svg\");\n    this.container.appendChild(this.svg);\n    this.svg.setAttribute(\"width\", this.container.getBoundingClientRect().width);\n    this.svg.setAttribute(\"height\", this.container.getBoundingClientRect().height);\n\n    /* Manifest of containers and namespaces */\n    this.o = {};                 // options namespace\n    this.svgEls = {};            // svg element namespace\n    this.handlers = {};          // mouse and touch event handler namespace\n    this.state = {};             // state namespace\n    this.stateConstraints = {};  // state constraints namespace\n    this.observers = [];         // observer callback container\n\n    this._initOptions(o);\n    this._initStateConstraints();\n    this._initState();\n    this._initSvgEls();\n    this._initHandlers();\n  }\n\n  /**\n   * Initialize the options\n   * @abstract\n   * @protected\n   */\n  _initOptions(o) {}\n\n  /**\n   * Initialize state constraints\n   * @abstract\n   * @protected\n   */\n  _initStateConstraints() {}\n\n  /**\n   * Initialize state\n   * @abstract\n   * @protected\n   */\n  _initState() {}\n\n  /**\n   * Initialize the svg elements.\n   * Each implementation of this method must end with calls to _appendSvgEls() and _update(),\n   * in that order, as shown in this template\n   * @abstract\n   * @protected\n   */\n  _initSvgEls() {}\n\n  /**\n   * Append the newly created svg elements to the svg container.\n   * This method should be called exctly once by each implementation of the _initSvgEls() method.\n   * @protected\n   */\n  _appendSvgEls() {\n    const _this = this;\n\n    Object.values(_this.svgEls).forEach(svgEl => {\n      appendSvgEls(svgEl);\n    });\n\n    function appendSvgEls(child) {\n      if (child instanceof Array) {\n        child.forEach(arrEl => appendSvgEls(arrEl));\n      } else {\n        _this.svg.appendChild(child);\n        child.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n      }\n    }\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @abstract\n   * @protected\n   */\n  _initHandlers() {}\n\n  /**\n   * Update (redraw) component based on state\n   * @abstract\n   * @protected\n   */\n  _update() {}\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   */\n  getVal() {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract \n   * @public\n   */\n  setInternalVal(newVal) {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   */\n  setVal(newVal) {}\n\n  /**\n   * Get the current state.\n   * @abstract\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState() {}\n\n  /**\n   * Set the current state and redraw.\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setInternalState(newState) {}\n\n  /**\n   * Sets the current state and redraws.\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setState(newState) {}\n  \n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /** Helper method: get x relative to the container */\n  _getRelativeX(x) {\n    return x - this._getLeft();\n  }\n\n  /** Helper method: get y relative to the container */\n  _getRelativeY(y) {\n    return y - this._getTop();\n  }\n\n   /** Helper method: get the width of the svg container */\n   _getWidth() {\n     return this.svg.getBoundingClientRect().width;\n   }\n\n   /** Helper method: get the height of the svg container */\n   _getHeight() {\n     return this.svg.getBoundingClientRect().height;\n   }\n\n   /** Helper method: get the top edge position of the svg container */\n   _getTop() {\n     return this.svg.getBoundingClientRect().top;\n   }\n\n   /** Helper method: get the left edge position of the svg container */\n   _getLeft() {\n     return this.svg.getBoundingClientRect().left;\n   }\n}\n\nObject.assign(Widget.prototype, WidgetSvgNsMixin);\nObject.assign(Widget.prototype, WidgetStateMixin);\nObject.assign(Widget.prototype, WidgetOptionsMixin);\nObject.assign(Widget.prototype, WidgetObserverMixin);\n\nexport default Widget;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget.js","import AudioModuleUtil from \"./util\";\nimport shimWebAudioConnect from \"./shim-web-audio-connect\";\n\n'use strict';\n\n/**\n * Base class representing an Audio Module.\n * An AudioModule wraps a set of AudioNodes to provide a higher-order component that can itself be\n * used as an AudioNode.\n * @abstract @class\n */\nclass AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} - The Audio Context that the module participates in.\n   * @param {number} numInputs - Number of inputs.\n   * @param {number} numOutputs - Number of outputs.\n   */\n  constructor(audioCtx, numInputs, numOutputs) {\n    this.audioCtx = audioCtx;\n\n    // marker boolean to distinguish current object from an AudioNode\n    this.isAudioModule = true;\n\n    // shim the connect method for the Audio Context so that AudioNodes can connect to AudioModules\n    if (typeof this.audioCtx.webAudioConnect !== \"function\") {\n      shimWebAudioConnect(this.audioCtx);\n    }\n\n    this.input = audioCtx.createGain();\n    this.output = audioCtx.createGain();\n\n    this.audioComponents = {};\n\n    this._initAudioComponents();\n    this._initAudioParams();\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @abstract\n   */\n  _initAudioComponents() {}\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {}\n\n  /* ============================================================================================ */\n  /*  PUBLIC API\n  /* ============================================================================================ */\n  \n  /**\n   * Returns the AudioContext that the Audio Module is participating in.\n   * @returns {AudioContext} - the AudioContext that the Audio Module is participating in. \n   */\n  getContext() {\n    return this.audioCtx;\n  }\n  \n  /**\n   * Connect to another AudioNode or AudioModule\n   * @public\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to connect to.\n   * @param {number} outputIndex - Channel of the output to connect.\n   * @param {number} outputIndex - Channel of the destintation to connect to. \n   */\n  connect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.connect(destination._input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to disconnect from.\n   * @param {number} outputIndex - Channel of the output to disconnect.\n   * @param {number} outputIndex - Channel of the destintation to disconnect from. \n   */\n  disconnect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.disconnect(destination._audioModuleInput);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n}\n\nexport default AudioModule;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module.js","'use strict';\n\nimport Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing an SVG Dial widget.\n * @class\n * @implements {Widget}\n */\nclass Dial extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object=} o - options.\n   * @param {number=0} o.minVal - Minimum value constraint.\n   * @param {number=127} o.maxVal - Maximum value constraint.\n   * @param {number=1} o.stepInterval - Interval of the steps in which the dial changes value. \n   * @param {string=\"#000\"} o.needleColor - Dial needle color.\n   * @param {string=\"#f40\"} o.activeColor - Dial active color.\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Returns the dial value.\n   * @public @override\n   * @returns {number} - Value of the dial.\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setVal(), but will not trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setInternalVal(), but will trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /**\n   * Sets the options. \n   * @public @override\n   * @param {object} o - Options.\n   */\n  setOptions(o) {\n    super.setOptions(o);\n    this.o.stepPrecision = MathUtil.getPrecision(this.o.stepInterval);\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      stepInterval: 1,\n      needleColor: \"#414141\",\n      activeColor: \"#f40\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n\n    // set the precision based on the step interval\n    this.o.stepPrecision =  MathUtil.getPrecision(this.o.stepInterval);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({\n        min: _this.o.minVal,\n        max: _this.o.maxVal,\n        transform: num => MathUtil.quantize(num, _this.o.stepInterval, _this.o.stepPrecision)\n      })\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      val: 0\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      bgArc: document.createElementNS(this.SVG_NS, \"path\"),\n      activeArc: document.createElementNS(this.SVG_NS, \"path\"),\n      needle: document.createElementNS(this.SVG_NS, \"line\")\n    };\n\n    // draw the background arc\n    this.svgEls.bgArc.setAttribute(\"d\",\n      _this._calcSvgArcPath(\n        _this._calcNeedleCenter().x,\n        _this._calcNeedleCenter().y,\n        _this._calcDialRadius(),\n        0.67 * Math.PI,\n        2.35 * Math.PI\n    ));\n    this.svgEls.bgArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.bgArc.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.bgArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.bgArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the active arc\n    this.svgEls.activeArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.activeArc.setAttribute(\"stroke\", _this.o.activeColor);\n    this.svgEls.activeArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.activeArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the needle\n    this.svgEls.needle.setAttribute(\"x1\", _this._calcNeedleCenter().x);\n    this.svgEls.needle.setAttribute(\"y1\", _this._calcNeedleCenter().y);\n    this.svgEls.needle.setAttribute(\"x2\", _this._calcNeedleEnd().x);\n    this.svgEls.needle.setAttribute(\"y2\", _this._calcNeedleEnd().y);\n    this.svgEls.needle.setAttribute(\"stroke-width\", _this._calcNeedleWidth());\n    this.svgEls.needle.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.needle.setAttribute(\"z-index\", \"1000\");\n    this.svgEls.needle.setAttribute(\"stroke-linecap\", \"round\");\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n   _initHandlers() {\n      const _this = this;\n\n      let y0 = 0;\n      let yD = 0;\n      let newVal = _this.getState().val;\n\n      this.handlers = {\n       touch: function(ev) {\n         y0 = ev.clientY;\n\n         document.addEventListener(\"mousemove\", _this.handlers.move);\n         document.addEventListener(\"touchmove\", _this.handlers.move);\n         document.addEventListener(\"mouseup\", _this.handlers.release);\n         document.addEventListener(\"touchend\", _this.handlers.release);\n       },\n       move: function(ev) {\n         ev.preventDefault();\n\n         yD = y0 - ev.clientY;\n         y0 = ev.clientY;\n\n         newVal = _this.state.val + (yD * _this.o.mouseSensitivity * _this._calcMovePrecision());\n         newVal = Math.max(newVal, _this.o.minVal);\n         newVal = Math.min(newVal, _this.o.maxVal);\n\n         _this.setState({\n           val: newVal\n         });\n       },\n       release: function() {\n         document.removeEventListener(\"mousemove\", _this.handlers.move);\n         document.removeEventListener(\"touchmove\", _this.handlers.move);\n       }\n      };\n\n      this.svg.addEventListener(\"mousedown\", _this.handlers.touch);\n      this.svg.addEventListener(\"touchstart\", _this.handlers.touch);\n   }\n\n  /**\n   * Updates (redraws) components based on state.\n   * @override\n   * @private\n   */\n   _update() {\n     // change the needle angle\n     this.svgEls.needle.setAttribute(\"x1\", this._calcNeedleCenter().x);\n     this.svgEls.needle.setAttribute(\"y1\", this._calcNeedleCenter().y);\n     this.svgEls.needle.setAttribute(\"x2\", this._calcNeedleEnd().x);\n     this.svgEls.needle.setAttribute(\"y2\", this._calcNeedleEnd().y);\n\n     // change the active arc length\n     this.svgEls.activeArc.setAttribute(\"d\",\n       this._calcSvgArcPath(\n         this._calcNeedleCenter().x,\n         this._calcNeedleCenter().y,\n         this._calcDialRadius(),\n         0.65 * Math.PI,\n         this._calcNeedleAngle() - 0.5 * Math.PI\n     ));\n\n     // if the value is at min, change the color to match needle color\n     // - otherwise the active part will be visible beneath the needle\n     if (this.state.val === this.o.minVal) {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.needleColor);\n     } else {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.activeColor);\n     }\n   }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n   /** \n    * Calcultes the stroke width for the background and active arcs.\n    * @private\n    * @returns {number} - Arc stroke width;\n    */\n   _calcArcStrokeWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the dial radius.\n    * @private\n    * @returns {number} - Radius of the dial.\n    */\n   _calcDialRadius() {\n     let radius = (Math.min(this._getWidth(), this._getHeight()) / 2) * 0.89;\n     radius = Math.trunc(radius);\n     return radius;\n   }\n\n   /** \n    * Calculates the needle angle for a given state val.\n    * @private\n    * @returns {number} - Angle of the needle.\n    */\n   _calcNeedleAngle() {\n     const _this = this;\n\n     return (\n              // protect against divide by 0:\n              ((this.o.maxVal - _this.o.minVal) !== 0) ?\n                  (  \n                    (_this.state.val - _this.o.minVal) / (_this.o.maxVal - _this.o.minVal) * (1.7 * Math.PI) + \n                    (1.15 * Math.PI)\n                  )  \n                : ( 0.5 * (1.7 * Math.PI) + (1.15 * Math.PI) )\n            );\n   }\n\n   /** \n    * Calculates the center of the needle.\n    * @private\n    * @returns {object} - {x, y} object representing the needle center coordinates.\n    */\n   _calcNeedleCenter() {\n     const _this = this;\n     return {\n       x: Math.trunc(_this._getWidth() / 2),\n       y: Math.trunc(_this._getHeight() / 2)\n     };\n   }\n\n   /** \n    * Calculates the position of end of the needle\n    * @private\n    * @returns {object} - {x, y} object representing the end of the needle. \n    */\n   _calcNeedleEnd() {\n     const _this = this;\n     return {\n       x: _this._calcNeedleCenter().x + (Math.sin(_this._calcNeedleAngle()) * _this._calcDialRadius()),\n       y: _this._calcNeedleCenter().y - (Math.cos(_this._calcNeedleAngle()) * _this._calcDialRadius())\n     };\n   }\n\n   /** \n    * Calculates the needle width.\n    * @private\n    * @returns {number} - The width of the needle in px.\n    */\n   _calcNeedleWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the path for an svg arc based on cx, cy, r, startAngle, endAngle.\n    * The input parameters are the way arcs are represented in HTML canvas.\n    * @private\n    * @param {number} cx - Center X.\n    * @param {number} cy - Center Y.\n    * @param {number} r - Radius.\n    * @param {number} startAngle - Start angle in radians.\n    * @param {number} endAngle - End angle in radians.\n    * @returns {string} - A string to be used for the arc path by an SVG arc object.\n    */\n   _calcSvgArcPath(cx, cy, r, startAngle, endAngle) {\n     let x1 = cx + (r * Math.cos(startAngle));\n     let y1 = cy + (r * Math.sin(startAngle));\n     let x2 = cx + (r * Math.cos(endAngle));\n     let y2 = cy + (r * Math.sin(endAngle));\n     let largeArc = (endAngle - startAngle) < Math.PI ? 0 : 1;\n     let sweep = (endAngle - startAngle) < Math.PI ? 1 : 1;\n\n     return [\"M\", x1, y1, \"A\", r, r, 0, largeArc, sweep, x2, y2].join(\" \");\n   }\n\n   /**\n    * Calculates the precision with which the state value changes when moved.\n    */\n   _calcMovePrecision() {\n     let precision = (this.o.maxVal - this.o.minVal) / 127;\n     return precision;\n   }\n}\n\nexport default Dial;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/dial.js","/**\n * Useful Math Utility functions\n */\nlet MathUtil = {\n\n  /**\n   * Returns the decimal precision of a number.\n   * @param {number} val - The value whose precision to check.\n   * @returns {number} - Number of decimal places.\n   */\n  getPrecision(val) {\n    let decStr = (''+val).split('.')[1];\n    return (decStr ? decStr.length : 0);\n  },\n\n  /**\n   * Round a number to specified decimal precision.\n   * Same as Number.prototype.toFixed, but does not use toString.\n   * @param {nubmer} val - Value to be rounded.\n   * @param {precision} val - \n   * @returns  \n   */\n  round: function round(val, precision) {\n    let factor = Math.pow(10, precision);\n    return Math.round(val * factor) / factor;\n  },\n\n  /**\n   * Quantize a value (set it to the closest value matching the interval)\n   * Note: result will not necessarily reflect the same number of places of\n   * as the q input due to floating point arithmetic.\n   * @param {number} val - Value to quantize.\n   * @param {number} q - The quantization interval.\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val.\n   */\n  quantize: function quantize(val, q, precision) {\n    let qVal;\n\n    if (q == 0) {\n      return 0;\n    } else if (q < 0) {\n      q = Math.abs(q);\n    }\n\n    // quantize\n    qVal = ~~(val / q) * q;\n\n    qVal = Math.abs(val - qVal) > (q / 2) ? \n            qVal > 0 ? \n              qVal + q\n            : qVal - q\n          : qVal;\n\n    if (precision !== undefined) {\n      qVal = MathUtil.round(qVal, precision);\n    }\n\n    return qVal;\n  },\n\n  /**\n   * Alias for quantize(val, q)\n   * @param {number} val - Value to quantize\n   * @param {number} q - The quantization interval\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val\n   */\n  q: function q(val, q, precision) {\n    return MathUtil.quantize(val, q, precision);\n  }\n};\n\nexport default MathUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/util/util-math.js","'use strict';\n\n/**\n * A collection of static utility methods for Audio Modules\n */\nlet AudioModuleUtil = {\n\n  /**\n   * Convert MIDI pitch to frequency\n   * @param {number} midiPitch - The midi pitch number.\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  midiToFreq: function (midiPitch, a4tuning) {\n    a4tuning = a4tuning || 440;\n    let freq = -1;\n\n    if (midiPitch !== -1) freq = Math.pow(2, (midiPitch - 69) / 12) * 440;\n    return freq;\n  },\n\n  /**\n   * Convert note name to MIDI pitch\n   * @param {string} noteName - The note name to convert\n   * @return {number} midiPitch - MIDI pitch for the given note name. Return -1 if invalid argument format.\n   */\n  noteNameToMidi: function (noteName) {\n    let noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n\n    if(noteNameFormat.test(noteName) === false) {\n      console.log('AudioModuleUtil.noteNameToMidi: invalid note name format');\n      return -1;\n    } else {\n      let capture = noteNameFormat.exec(noteName);\n\n      let note = capture[1];\n      let accidental = capture[2];\n      let octave = capture[3];\n\n      let noteFundamentalMap = {\n        'A': 9,\n        'a': 9,\n        'B': 11,\n        'b': 11,\n        'C': 0,\n        'c': 0,\n        'D': 2,\n        'd': 2,\n        'E': 4,\n        'e': 4,\n        'F': 5,\n        'f': 5,\n        'G': 7,\n        'g': 7\n      };\n\n      let noteFundamental = noteFundamentalMap[note];\n\n      if(accidental === '#') {\n        noteFundamental++;\n      } else if (accidental === 'b') {\n        noteFundamental--;\n      }\n\n      let midiPitch = noteFundamental + (12 * octave);\n\n      return midiPitch;\n    }\n  },\n\n  /**\n   * Convert note name to frequency\n   * @param {string} noteName - The note name to convert\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  noteNameToFreq: function (noteName, a4tuning) {\n    a4tuning = a4tuning || 440;\n    return AudioModuleUtil.midiToFreq(AudioModuleUtil.noteNameToMidi(noteName), a4tuning);\n  }\n}\n\nexport default AudioModuleUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/util.js","/**\n * Mixin specifying the xml namespace for SVG\n * @mixin\n */\nconst SVG_NS = { SVG_NS: \"http://www.w3.org/2000/svg\" };\n\nexport default SVG_NS;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-svgns.js","import Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Mixin for methods related to state management\n * @mixin\n */\nlet WidgetStateMixin = {\n\n  /**\n   * Get the current state.\n   *\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState: function getState() {\n    return Object.assign({}, this.state);\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setInternalState: function setInternalState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    newState = newState || this.getState();\n\n    Object.keys(newState).forEach(key => {\n      if (_this.state.hasOwnProperty(key) && _this.state[key] !== newState[key]) {\n        _this.state[key] = newState[key];\n        isChanged = true;\n      }\n    });\n\n    _this.stateConstraints.constrain(_this.state);\n    this._update();\n\n    return isChanged;\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setState: function setState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    isChanged = this.setInternalState(newState);\n\n    this._notifyObservers();\n\n    return isChanged;\n  }\n};\n\nexport default WidgetStateMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-state.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet WidgetOptionsMixin = {\n\n  /**\n   * Initializes the options.\n   * @private\n   * @param {object} o - Options.\n   */\n  _initOptions: function _initOptions(o) {\n    const _this = this;\n    o = o || {};\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n      }\n    });\n  },\n\n  /**\n   * Get the options object\n   * @public\n   * @return {object} this.o - Options\n   */\n  getOptions: function getOptions() {\n    return Object.assign({}, this.o);\n  },\n\n  /**\n   * Set the options\n   * Uses a diffing function, so only specified keys that have new values will be changed\n   * @public\n   * @param {object} o - options\n   * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n   */\n  setOptions: function setOptions(o) {\n    const _this = this;\n    o = o || {};\n    let isChanged = false;\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n        isChanged = true;\n      }\n    });\n\n    if (isChanged) {\n      this.setState();\n    }\n\n    return isChanged;\n  }\n};\n\nexport default WidgetOptionsMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-options.js","/**\n * Mixin for methods related to observer callback support\n * @mixin\n */\nlet WidgetObserverMixin = {\n\n  /**\n   * Register a new observer function that will recieve the state value every time the state is updated.\n   * @public\n   * @param {function} newObserver - The new observer function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addObserver: function addObserver(newObserver) {\n    let isChanged = false;\n\n    if (!(this.observers.find(observer => observer === newObserver))) {\n      this.observers.push(newObserver);\n      isChanged = true;\n    }\n\n    return isChanged;\n  },\n\n  /**\n   * Remove an observer function from being notified when the state changes.\n   * @public\n   * @param {function} targetObserver - The observer function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeObserver: function removeObserver(targetObserver) {\n    const _this = this;\n    let isChanged = false;\n\n    this.observers.forEach((observer, idx) => {\n      if (observer === targetObserver) {\n        _this.observers.splice(idx, 1);\n        isChanged = true;\n      }\n    });\n\n    return isChanged;\n  },\n\n  /**\n   * Notify all observers of new state\n   * @protected\n   */\n  _notifyObservers() {\n    const _this = this;\n    this.observers.forEach(observer => observer(_this.getVal()));\n  }\n};\n\nexport default WidgetObserverMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-observer.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing a Slider widget.\n * @class\n * @implements {Widget}\n */\nclass Slider extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minVal=0] - The minimum possible value the slider can represent.\n   * @param {number} [o.maxVal=127] - The maximum possible value teh slider can represent.\n   * @param {string} [o.sliderBodyColor=\"#484848\"] - The color of the slider bar.\n   * @param {string} [o.sliderHandleColor=\"#484848\"] - The color of the triangle used as the slider's needle.\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @protected\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      sliderBodyColor: \"#484848\",\n      sliderHandleColor: \"#484848\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initialize state constraints\n   * @override\n   * @protected\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({ min: _this.o.minVal, max: _this.o.maxVal, transform: (num) => num.toFixed(0) })   \n    });\n  }\n\n  /**\n   * Initialize state.\n   * @override\n   * @protected\n   */\n  _initState() {\n    this.state = {\n      val: this.o.minVal\n    };\n\n    // keep track of dimensions\n    this.dims = {\n      offsetBottom: 5,\n      offsetTop: 5,\n      bodyWidth: 2,\n      handleWidth: 10,\n      handleHeight: 10\n    };\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @protected\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      body: document.createElementNS(_this.SVG_NS, \"rect\"),\n      overlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n      handle: document.createElementNS(_this.SVG_NS, \"polygon\")\n    };\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @override\n   * @protected\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n\n      touchBody: function touchBody(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let newVal = _this._calcTouchVal(ev.clientY);\n        _this.setState({ val: newVal });\n        \n        _this.handlers.touchHandle(ev);\n      },\n\n      touchHandle: function touchHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        \n        document.body.addEventListener(\"mousemove\", _this.handlers.moveHandle);\n        document.body.addEventListener(\"touchmove\", _this.handlers.moveHandle);\n        document.body.addEventListener(\"mouseup\", _this.handlers.releaseHandle); \n        document.body.addEventListener(\"touchend\", _this.handlers.releaseHandle); \n      },\n\n      moveHandle: function moveHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let newVal = _this._calcTouchVal(ev.clientY);\n        _this.setState({ val: newVal });\n      },\n\n      releaseHandle: function releaseHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        document.body.removeEventListener(\"touchmove\", _this.handlers.moveHandle); \n        document.body.removeEventListener(\"mousemove\", _this.handlers.moveHandle);\n        document.body.removeEventListener(\"mouseup\", _this.handlers.releaseHandle); \n        document.body.removeEventListener(\"touchend\", _this.handlers.releaseHandle); \n      }\n    };\n\n    this.svgEls.overlay.addEventListener(\"mousedown\", _this.handlers.touchBody);\n    this.svgEls.overlay.addEventListener(\"touchstart\", _this.handlers.touchBody);\n    this.svgEls.handle.addEventListener(\"mousedown\", _this.handlers.touchHandle);\n    this.svgEls.handle.addEventListener(\"touchstart\", _this.handlers.touchHandle);\n  }\n\n  /**\n   * Update (redraw) component based on state\n   * @override\n   * @protected\n   */\n  _update() {\n    const _this = this;\n\n    let sliderBodyPos = _this._calcSliderBodyPos();\n\n    this.svgEls.body.setAttribute(\"x\", sliderBodyPos.x);\n    this.svgEls.body.setAttribute(\"y\", sliderBodyPos.y);\n    this.svgEls.body.setAttribute(\"width\", _this.dims.bodyWidth);\n    this.svgEls.body.setAttribute(\"height\", _this._calcSliderBodyHeight());\n    this.svgEls.body.setAttribute(\"fill\", _this.o.sliderBodyColor);\n\n    this.svgEls.overlay.setAttribute(\"x\", sliderBodyPos.x);\n    this.svgEls.overlay.setAttribute(\"y\", sliderBodyPos.y);\n    this.svgEls.overlay.setAttribute(\"width\", _this.dims.bodyWidth + _this.dims.handleWidth);\n    this.svgEls.overlay.setAttribute(\"height\", _this._calcSliderBodyHeight());\n    this.svgEls.overlay.setAttribute(\"fill\", \"transparent\");\n\n    let sliderHandlePoints = _this._calcSliderHandlePoints();\n\n    this.svgEls.handle.setAttribute(\"points\", sliderHandlePoints);\n    this.svgEls.handle.setAttribute(\"fill\", _this.o.sliderHandleColor);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get the slider value.\n   * @public\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Set the current slider value.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public\n   * @param {number} newVal - The new slider value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Set the current slider value.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public\n   * @param {number} newVal - The new slider value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Returns the position and dimensions for the slider body.\n   * @private\n   * @returns {object} - {x, y} position.\n   */\n  _calcSliderBodyPos() {\n    const _this = this;\n\n    return {\n      x: _this._getWidth() / 2 - 1,\n      y: _this.dims.offsetTop\n    };\n  }\n\n  /**\n   * Returns the height of the slider body.\n   * @private\n   * @returns {number} - Height of the slider body.\n   */\n  _calcSliderBodyHeight() {\n    return this._getHeight() - this.dims.offsetTop - this.dims.offsetBottom;\n  }\n\n  /**\n   * Returns the height of the slider body.\n   * @private\n   * @returns {number} - Width of the slider body.\n   */\n  _calcSliderBodyWidth() {\n    return this.dims.bodyWidth;\n  }\n\n    /**\n   * Returns the position and dimensions for the slider body.\n   * @private\n   * @returns {object} - {x, y} position.\n   */\n  _calcSliderHandlePoints() {\n    const _this = this;\n\n    let sliderBodyHeight = _this._calcSliderBodyHeight();\n\n    let x0 = (_this._getWidth() / 2) + 1;\n    let y0 = (sliderBodyHeight - (_this.state.val / (_this.o.maxVal - _this.o.minVal)) * sliderBodyHeight) + _this.dims.offsetBottom;\n    let x1 = x0 + this.dims.handleWidth;\n    let y1 = y0 - this.dims.handleHeight / 2;\n    let x2 = x1;\n    let y2 = y0 + this.dims.handleHeight / 2;\n\n    return x0 + \",\" + y0 + \" \" +\n           x1 + \",\" + y1 + \" \" +\n           x2 + \",\" + y2;\n  }\n\n  /**\n   * Calculate the value of the slider touched at position y.\n   * @private\n   * @param {number} y - Y-value of the touch location.\n   * @returns {number} - Value of the slider at the touched location.\n   */\n  _calcTouchVal(y) {\n    let valRange = this.o.maxVal - this.o.minVal;\n    let bodyY = (this._getHeight() - this._getRelativeY(y)) - this.dims.offsetBottom;\n    let touchVal = ((bodyY / this._calcSliderBodyHeight()) * valRange) + this.o.minVal; \n    \n    return touchVal;\n  }\n}\n\nexport default Slider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/slider.js","/**\n * Shim the WebAudio connect and disconnect methods to allow WebAudio nodes to connect to Audio Modules.\n * @param {AudioContext} audioCtx - The Audio Context to shim.\n */\nfunction shimWebAudioConnect(audioCtx) {\n  let audioNodePrototype = Object.getPrototypeOf(Object.getPrototypeOf(audioCtx.createGain()));\n\n  // keep a reference to the original connect and disconnect methods as webAudioConnect and webAudioDisconnect\n  audioNodePrototype.webAudioConnect = audioNodePrototype.connect;\n  audioNodePrototype.webAudioDisconnect = audioNodePrototype.disconnect;\n\n  // if the destination object has an 'input' property, it is an Audio Module - connect to 'input'\n  // else it is an AudioNode - connect directly\n  audioNodePrototype.connect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioConnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioConnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  audioNodePrototype.disconnect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioDisconnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioDisconnect(destination, outputIndex, inputIndex);\n    }\n  };\n}\n\nexport default shimWebAudioConnect;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/shim-web-audio-connect.js","/**\n * Verifies that the given audio context has the requested features and attempts to shim features that are\n * missing.\n */\nfunction VerifyAudioContextFeatures(audioCtx, features) {\n\n  features.forEach(feature => {\n\n    switch(feature) {\n\n      case \"Analyser\":\n        if (typeof audioCtx.createAnalyser !== \"function\") {\n          throw new Error(\"Required module AnalyserNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"AudioBuffer\":\n        if (typeof audioCtx.createBuffer !== \"function\") {\n          throw new Error(\"Required module AudioBufferNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"AudioBufferSource\":\n        if (typeof audioCtx.createBufferSource !== \"function\") {\n          throw new Error(\"Required module AudioBufferSourceNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"BiquadFilter\":\n        if (typeof audioCtx.createBiquadFilter !== \"function\") {\n          throw new Error(\"Required module BiquadFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"ChannelMerger\":\n        if (typeof audioCtx.createChannelMerger !== \"function\") {\n          throw new Error(\"Required module ChannelMergerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"ChannelSplitter\":\n        if (typeof audioCtx.createChannelSplitter !== \"function\") {\n          throw new Error(\"Required module ChannelSplitterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Convolver\":\n        if (typeof audioCtx.createConvolver !== \"function\") {\n          throw new Error(\"Required module ConvolverNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Delay\":\n        if (typeof audioCtx.createDelay !== \"function\") {\n          throw new Error(\"Required module DelayNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"DynamicsCompressor\":\n        if (typeof audioCtx.createDynamicsCompressor !== \"function\") {\n          throw new Error(\"Required module DynamicsCompressorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n       \n      case \"Gain\":\n        if (typeof audioCtx.createGain !== \"function\") {\n          throw new Error(\"Required module GainNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"IIRFilter\":\n        if (typeof audioCtx.createIIRFilter !== \"function\") {\n          throw new Error(\"Required module IIRFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Oscillator\":\n        if (typeof audioCtx.createOscillator !== \"function\") {\n          throw new Error(\"Required module OscillatorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n        \n      case \"Panner\":\n        if (typeof audioCtx.createPannerr !== \"function\") {\n          throw new Error(\"Required module PannerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"StereoPanner\":\n        if (typeof audioCtx.createStereoPanner !== \"function\") {\n          audioCtx.createStereoPanner = function() { return new StereoPannerShim(audioCtx); };\n        }\n        break;\n\n      default:\n        console.warn(\"A check for AudioContext feature \", feature, \"is being requested, but no matching check is implemented\");\n        break;\n    }\n  });\n}\n\nexport default VerifyAudioContextFeatures;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/verify-audio-context-features.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport StereoPannerShim from \"audio_modules/stereo-panner-shim\";\nimport ChannelStrip from \"audio_modules/channel-strip\";\n\nimport Dial from \"ui/dial\";\nimport Slider from \"ui/slider\";\n\nconst AUDIO_CTX = new AudioContext();\nconst DEST = AUDIO_CTX.destination;\n\n/* ============================================================================================= */\n/* STEREO PANNER SHIM TEST\n/* ============================================================================================= */\n\n(function() {\n\n  AUDIO_CTX.createStereoPanner = function() {\n    console.log(\"Creating stereo panner...\"); \n    return new StereoPannerShim(AUDIO_CTX); \n  };\n\n  let stereoPanner = AUDIO_CTX.createStereoPanner();\n  let oscillator = AUDIO_CTX.createOscillator();\n  let gain = AUDIO_CTX.createGain();\n\n  oscillator.connect(stereoPanner);\n  stereoPanner.connect(gain);\n  gain.connect(DEST);\n\n  gain.gain.value = 0;\n\n  oscillator.frequency.value = 220;\n  oscillator.start();\n\n  // pan dial\n  var panDial = new Dial(document.getElementById(\"pan-dial\"), {\n    minVal: -1,\n    maxVal: 1,\n    stepInterval: 0.01\n  });\n\n  panDial.addObserver(val => {\n    stereoPanner.pan.value = val;\n  });\n\n  // audio on/off toggle\n  document.getElementById(\"stereo-panner-audio-toggle\").addEventListener(\"change\", function(ev) {\n    gain.gain.value = ev.target.checked ? 0.5 : 0;\n  });\n\n})();\n\n/* ============================================================================================= */\n/* CHANNEL STRIP TEST\n/* ============================================================================================= */\n\n(function() {\n  \n  let channelStrip = new ChannelStrip(AUDIO_CTX);\n  // let osc = AUDIO_CTX.createOscillator();\n  // let gain = AUDIO_CTX.createGain();\n\n  // osc.connect(channelStrip);\n  // channelStrip.connect(gain);\n  // gain.connect(DEST);\n\n  // gain.gain.value = 0.5;\n  // osc.frequency.value = 220;\n  // osc.start();\n\n  // document.querySelector(\".channel-strip .audio-toggle\").addEventListener(\"change\", ev => {\n  //   gain.gain.value = ev.target.checked ? 0.5 : 0;\n  // });\n\n  // // input gain slider\n  // let inputGainSlider = new Slider(document.querySelector(\".channel-strip .input-gain-slider\"), {\n  //   minVal: 0,\n  //   maxVal: 1,\n  //   stepInterval: 0.01\n  // });\n  // inputGainSlider.addObserver(gain => { channelStrip.setInputGain(gain); });\n\n  // // pan dial;\n  // let panDial = new Dial(document.querySelector(\".channel-strip .pan-dial\"), {\n  //   minVal: -1,\n  //   maxVal: 1,\n  //   stepInterval: 0.01\n  // });\n  // panDial.addObserver(pan => { channelStrip.setPan(pan); });\n\n  // // output gain slider\n  // let outputGainSlider = new Slider(document.querySelector(\".channel-strip .output-gain-slider\"), {\n  //   minVal: 0,\n  //   maxVal: 1,\n  //   stepInterval: 0.01\n  // });\n  // outputGainSlider.addObserver(gain => { channelStrip.setOutputGain(gain); });\n\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./test/manual_test/audio_modules/manual-test.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n'use strict';\n\n/** \n * Class representing a Stereo Panner Shim.\n * This shim provides an implementation of StereoPannerNode for WebAudio implementations that\n * do not provide it.\n * @class\n */\nclass StereoPannerShim extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx - Audio Context in which this module participates. \n   */\n  constructor(audioCtx) {\n    super(audioCtx);\n\n    const _this = this;\n\n    // generate a setter for the pan value\n    (function generatePanSetter (val) {\n      _this.pan = new Number(val);\n\n      Object.defineProperty(_this.pan, \"value\", {\n        set: function (newVal) {\n          newVal = (newVal > 1) ? 1 : newVal;\n          newVal = (newVal < -1) ? -1 : newVal;\n\n          _this.audioComponents.gainL.gain.value = -(newVal / 2) + 0.5;\n          _this.audioComponents.gainR.gain.value = (newVal / 2) + 0.5;\n\n          generatePanSetter(newVal);\n        }\n      });\n    }());\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n  \n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\", \"ChannelMerger\"]);\n\n      this.audioComponents = {\n        gainL: _this.audioCtx.createGain(),  \n        gainR: _this.audioCtx.createGain(),\n        merger: _this.audioCtx.createChannelMerger(2)\n      };\n\n      this.input.connect(this.audioComponents.gainL);\n      this.input.connect(this.audioComponents.gainR);\n      this.audioComponents.gainL.connect(this.audioComponents.merger, 0, 0);\n      this.audioComponents.gainR.connect(this.audioComponents.merger, 0, 1);\n      this.audioComponents.merger.connect(this.output);\n    \n      console.log(\"initialized\");      \n    } catch(err) {\n      console.error(err);\n    }\n  }\n}\n\nexport default StereoPannerShim;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/stereo-panner-shim.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n'use strict';\n\n/**\n * Class representing a Channel Strip.\n * A Channel Strip is a processing component similar to a channel strip found on a mixing board.\n * It facilitates control over input gain, output gain, and pan of a signal.\n * @class\n */\nclass ChannelStrip extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx \n   */\n  constructor(audioCtx) {\n    super(audioCtx);\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n  \n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\", \"StereoPanner\"]);\n\n      this.audioComponents = {\n        inputGain: _this.input,\n        panner: _this.audioCtx.createStereoPanner(),\n        outputGain: _this.output\n      }\n\n      this.audioComponents.inputGain.connect(this.audioComponents.panner);\n      this.audioComponents.panner.connect(this.audioComponents.outputGain);\n    \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {\n    this.inputGain = this.audioComponents.inputGain.gain;\n    this.outputGain = this.audioComponents.outputGain.gain;\n    this.pan = this.audioComponents.panner.pan;\n  }\n  \n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n  \n  /**\n   * Get input gain value.\n   * @returns {number} - Input gain value.\n   */\n  getInputGain() {\n    return this.audioComponents.inputGain.gain.value;\n  }\n\n  /**\n   * Set input gain value.\n   * @param {number} newVal - The new input gain value.\n   */\n  setInputGain(newVal) {\n    this.audioComponents.inputGain.gain.value = newVal;\n  }\n\n  /**\n   * Get pan value.\n   * @returns {number} - Pan value.\n   */\n  getPan() {\n    return this.audioComponents.panner.pan.value;\n  }\n\n  /**\n   * Set pan value.\n   * @param {number} newVal - The new pan value.\n   */\n  setPan(newVal) {\n    this.audioComponents.panner.pan.value = newVal;\n  }\n\n  /**\n   * Get output gain value.\n   * @returns {number} - Output gain value.\n   */\n  getOutputGain() {\n    return this.audioComponents.outputGain.gain.value;\n  }\n\n  /**\n   * Set output gain value.\n   * @param {number} newVal - The new output gain value.\n   */\n  setOutputGain(newVal) {\n    this.audioComponents.outputGain.gain.value = newVal;\n  }\n}\n\nexport default ChannelStrip;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/channel-strip.js"],"sourceRoot":""}